{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js\";\nimport React, { useState, useRef, useReducer } from 'react';\nimport './questions.scss';\n\nfunction Questions() {\n  const initialState = '';\n\n  const reducer = (state, action) => action;\n\n  const [questionText, changeQuestionText] = useReducer(reducer, initialState);\n  const [optionsText, changeOptionsText] = useReducer(reducer, initialState);\n  const [voteQuestion, setVoteQuestion] = useState(null);\n  const [voteOptions, setVoteOptions] = useState(null);\n  const questionRef = useRef(null);\n  const optionsRef = useRef(null);\n\n  function addOption(e) {\n    setVoteOptions(optionsText);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    type: \"text\",\n    placeholder: \"What is the value of \\u03C0?\",\n    value: questionText,\n    onChangeText: changeQuestionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(OptionsInput, {\n    type: \"text\",\n    placeholder: \"Type an answer\",\n    value: optionsText,\n    onChangeText: changeOptionsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addOption\",\n    onClick: addOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Add\"), voteOptions);\n}\n\nconst QuestionInput = ({\n  value,\n  onChangeText\n}) => /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  placeholder: \"What is the value of \\u03C0?\",\n  onChange: e => onChangeText(e.target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n});\n\nconst OptionsInput = ({\n  value,\n  onChangeText\n}) => /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  placeholder: \"Type an answer\",\n  onChange: e => onChangeText(e.target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n});\n\nexport default Questions;","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js"],"names":["React","useState","useRef","useReducer","Questions","initialState","reducer","state","action","questionText","changeQuestionText","optionsText","changeOptionsText","voteQuestion","setVoteQuestion","voteOptions","setVoteOptions","questionRef","optionsRef","addOption","e","QuestionInput","value","onChangeText","target","OptionsInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,OAAO,kBAAP;;AAEA,SAASC,SAAT,GAAoB;AAChB,QAAMC,YAAY,GAAG,EAArB;;AACA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAnC;;AACA,QAAM,CAACC,YAAD,EAAeC,kBAAf,IAAqCP,UAAU,CAACG,OAAD,EAAUD,YAAV,CAArD;AACA,QAAM,CAACM,WAAD,EAAcC,iBAAd,IAAmCT,UAAU,CAACG,OAAD,EAAUD,YAAV,CAAnD;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMgB,WAAW,GAAGf,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMgB,UAAU,GAAGhB,MAAM,CAAC,IAAD,CAAzB;;AAGA,WAASiB,SAAT,CAAmBC,CAAnB,EAAqB;AACjBJ,IAAAA,cAAc,CAACL,WAAD,CAAd;AACH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,WAAW,EAAC,8BAAvC;AAAiE,IAAA,KAAK,EAAEF,YAAxE;AAAsF,IAAA,YAAY,EAAEC,kBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAEH,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,gBAAtC;AAAuD,IAAA,KAAK,EAAEC,WAA9D;AAA2E,IAAA,YAAY,EAAEC,iBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,eAGH;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEO,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHG,EAIFJ,WAJE,CAAP;AAMH;;AAGD,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBAClB;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,KAAK,EAAED,KAA1B;AAAiC,EAAA,WAAW,EAAC,8BAA7C;AAAuE,EAAA,QAAQ,EAAEF,CAAC,IAAIG,YAAY,CAACH,CAAC,CAACI,MAAF,CAASF,KAAV,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAIA,MAAMG,YAAY,GAAG,CAAC;AAACH,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,kBACjB;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,KAAK,EAAED,KAA1B;AAAiC,EAAA,WAAW,EAAC,gBAA7C;AAA8D,EAAA,QAAQ,EAAEF,CAAC,IAAIG,YAAY,CAACH,CAAC,CAACI,MAAF,CAASF,KAAV,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAIA,eAAelB,SAAf","sourcesContent":["import React, { useState, useRef, useReducer } from 'react';\nimport './questions.scss';\n\nfunction Questions(){\n    const initialState = '';\n    const reducer = (state, action) => action;\n    const [questionText, changeQuestionText] = useReducer(reducer, initialState);\n    const [optionsText, changeOptionsText] = useReducer(reducer, initialState);\n    const [voteQuestion, setVoteQuestion] = useState(null);\n    const [voteOptions, setVoteOptions] = useState(null);\n    const questionRef = useRef(null);\n    const optionsRef = useRef(null);\n\n\n    function addOption(e){\n        setVoteOptions(optionsText) \n    }\n\n    return <div className=\"questions-wrapper\">\n        <QuestionInput type=\"text\" placeholder=\"What is the value of π?\" value={questionText} onChangeText={changeQuestionText} />\n        <OptionsInput type=\"text\" placeholder=\"Type an answer\" value={optionsText} onChangeText={changeOptionsText} />\n        <div className=\"addOption\" onClick={addOption}>Add</div>\n        {voteOptions}\n    </div>\n}\n\n\nconst QuestionInput = ({ value, onChangeText }) => (\n    <input type=\"text\" value={value} placeholder=\"What is the value of π?\" onChange={e => onChangeText(e.target.value)} />\n  );\n\nconst OptionsInput = ({value, onChangeText}) => (\n    <input type=\"text\" value={value} placeholder=\"Type an answer\" onChange={e => onChangeText(e.target.value)} />\n);\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}