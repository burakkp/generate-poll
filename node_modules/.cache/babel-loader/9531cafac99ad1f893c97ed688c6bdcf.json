{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js\";\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n  const {\n    votes\n  } = useQuestions();\n  const count = {};\n  let config = {};\n  votes.forEach(function (i) {\n    count[i] = (count[i] || 0) + 1;\n  });\n  let xAxis = [],\n      yAxis = [],\n      seperatedVotes = [];\n  console.log(Object.keys(count), Object.values(count));\n  useEffect(() => {\n    xAxis = Object.values(count);\n    yAxis = Object.keys(count);\n    seperatedVotes = [xAxis, yAxis];\n    config = {\n      chart: {\n        type: 'column',\n        width: 500,\n        height: 500\n      },\n      title: {\n        text: 'Vote Results'\n      },\n      xAxis: {\n        categories: xAxis\n      },\n      yAxis: {\n        categories: yAxis\n      },\n      series: seperatedVotes\n    };\n  });\n  console.log(config);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: 'chart',\n    options: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Result;","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js"],"names":["React","useEffect","Highcharts","HighchartsReact","useQuestions","Result","votes","count","config","forEach","i","xAxis","yAxis","seperatedVotes","console","log","Object","keys","values","chart","type","width","height","title","text","categories","series"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,MAAT,GAAkB;AAEd,QAAM;AAAEC,IAAAA;AAAF,MAAYF,YAAY,EAA9B;AAIA,QAAMG,KAAK,GAAG,EAAd;AACA,MAAIC,MAAM,GAAG,EAAb;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,UAASC,CAAT,EAAY;AAAEH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAW,CAACH,KAAK,CAACG,CAAD,CAAL,IAAU,CAAX,IAAgB,CAA3B;AAA8B,GAA1D;AAEA,MAAIC,KAAK,GAAG,EAAZ;AAAA,MACIC,KAAK,GAAG,EADZ;AAAA,MAEIC,cAAc,GAAG,EAFrB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAZ,EAA+BS,MAAM,CAACE,MAAP,CAAcX,KAAd,CAA/B;AACAN,EAAAA,SAAS,CAAC,MAAM;AAEZU,IAAAA,KAAK,GAAGK,MAAM,CAACE,MAAP,CAAcX,KAAd,CAAR;AACAK,IAAAA,KAAK,GAAGI,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAR;AACAM,IAAAA,cAAc,GAAG,CAACF,KAAD,EAAQC,KAAR,CAAjB;AAEAJ,IAAAA,MAAM,GAAG;AACLW,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,QADH;AAEHC,QAAAA,KAAK,EAAE,GAFJ;AAGHC,QAAAA,MAAM,EAAC;AAHJ,OADF;AAMLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OANF;AASLb,MAAAA,KAAK,EAAE;AACHc,QAAAA,UAAU,EAAEd;AADT,OATF;AAYLC,MAAAA,KAAK,EAAE;AACHa,QAAAA,UAAU,EAAEb;AADT,OAZF;AAeLc,MAAAA,MAAM,EAAEb;AAfH,KAAT;AAkBH,GAxBQ,CAAT;AA2BAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEN,UAA7B;AAAyC,IAAA,eAAe,EAAE,OAA1D;AAAmE,IAAA,OAAO,EAAEM,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH;;AAGD,eAAeH,MAAf","sourcesContent":["import React, {useEffect} from 'react';  \nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n\n    const { votes } = useQuestions();\n\n    \n\n    const count = {};\n    let config = {};\n    votes.forEach(function(i) { count[i] = (count[i]||0) + 1;});\n    \n    let xAxis = [],\n        yAxis = [],\n        seperatedVotes = [];\n\n    console.log(Object.keys(count),Object.values(count))\n    useEffect(() => {\n    \n        xAxis = Object.values(count);\n        yAxis = Object.keys(count);\n        seperatedVotes = [xAxis, yAxis];\n\n        config = {\n            chart: {\n                type: 'column',\n                width: 500,\n                height:500\n            },\n            title: {\n                text: 'Vote Results'\n            },\n            xAxis: {\n                categories: xAxis\n            },\n            yAxis: {\n                categories: yAxis\n            },\n            series: seperatedVotes\n        };\n\n    })\n\n    \n    console.log(config)\n\n    return <div className=\"result-wrapper\">\n        <HighchartsReact highcharts={Highcharts} constructorType={'chart'} options={config} />\n    </div>\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}