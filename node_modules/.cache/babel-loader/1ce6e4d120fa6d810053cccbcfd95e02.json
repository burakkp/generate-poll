{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js\";\nimport React, { createContext, useState, useContext } from 'react';\nimport './questions.scss';\nconst QuestionContext = createContext();\nexport const useQuestions = () => useContext(QuestionContext);\nexport default function QuestionProvider({\n  children\n}) {\n  const [questions, setQuestions] = useState([]);\n  const [updatedQ, setUpdatedQ] = useState([]);\n  const [qTitle, setQTitle] = useState('');\n\n  const addQuestionTitle = qTitle => setQTitle([...qTitle]);\n\n  const addQuestion = (id, question) => setQuestions([...questions, {\n    id,\n    question\n  }]);\n\n  const removeQuestion = (id, question) => {\n    let removed = questions.filter(questionArr => {\n      if (questionArr.id !== id) return questionArr;\n    });\n    setQuestions(removed);\n  };\n\n  const updateQuestions = (id, change) => {\n    setUpdatedQ(id, change); // if(change.length > 0){\n    //     questions.filter((questionArr) => {\n    //         if(questionArr.id === id){\n    //             console.log(change)\n    //         }\n    //     })\n    // }\n    //console.log(id, change)\n\n    console.log('updated', updatedQ);\n  };\n\n  const resetQuestionList = () => {\n    setQuestions([]);\n  };\n\n  return /*#__PURE__*/React.createElement(QuestionContext.Provider, {\n    value: {\n      questions,\n      qTitle,\n      addQuestionTitle,\n      addQuestion,\n      removeQuestion,\n      updateQuestions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, questions.length, \" / 10 possible answers\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetQuestionList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 65\n    }\n  }, \"Reset\"));\n}","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js"],"names":["React","createContext","useState","useContext","QuestionContext","useQuestions","QuestionProvider","children","questions","setQuestions","updatedQ","setUpdatedQ","qTitle","setQTitle","addQuestionTitle","addQuestion","id","question","removeQuestion","removed","filter","questionArr","updateQuestions","change","console","log","resetQuestionList","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,OAAO,kBAAP;AAEA,MAAMC,eAAe,GAAGH,aAAa,EAArC;AACA,OAAO,MAAMI,YAAY,GAAG,MAAMF,UAAU,CAACC,eAAD,CAArC;AAEP,eAAe,SAASE,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAEnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMY,gBAAgB,GAAGF,MAAM,IAC3BC,SAAS,CAAC,CACN,GAAGD,MADG,CAAD,CADb;;AAKA,QAAMG,WAAW,GAAG,CAACC,EAAD,EAAKC,QAAL,KAElBR,YAAY,CAAC,CACT,GAAGD,SADM,EAET;AACIQ,IAAAA,EADJ;AAEIC,IAAAA;AAFJ,GAFS,CAAD,CAFd;;AAUA,QAAMC,cAAc,GAAG,CAACF,EAAD,EAAKC,QAAL,KAAkB;AAErC,QAAIE,OAAO,GAAGX,SAAS,CAACY,MAAV,CAAkBC,WAAD,IAAiB;AAExC,UAAGA,WAAW,CAACL,EAAZ,KAAmBA,EAAtB,EAA0B,OAAOK,WAAP;AAE7B,KAJS,CAAd;AAMIZ,IAAAA,YAAY,CAACU,OAAD,CAAZ;AAEP,GAVD;;AAaA,QAAMG,eAAe,GAAG,CAACN,EAAD,EAAKO,MAAL,KAAgB;AAEpCZ,IAAAA,WAAW,CAACK,EAAD,EAAIO,MAAJ,CAAX,CAFoC,CAGpC;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBf,QAAvB;AAEH,GAhBD;;AAkBA,QAAMgB,iBAAiB,GAAG,MAAK;AAC3BjB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAFD;;AAIF,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAF;AAAaI,MAAAA,MAAb;AAAqBE,MAAAA,gBAArB;AAAuCC,MAAAA,WAAvC;AAAoDG,MAAAA,cAApD;AAAoEI,MAAAA;AAApE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,QADN,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAS,CAACmB,MAAjB,2BAFJ,oBAE0D;AAAQ,IAAA,OAAO,EAAED,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAF1D,CADJ;AAMD","sourcesContent":["import React, {createContext, useState, useContext} from 'react'\nimport './questions.scss';\n\nconst QuestionContext = createContext()\nexport const useQuestions = () => useContext(QuestionContext)\n\nexport default function QuestionProvider({ children }) {\n\n    const [questions, setQuestions] = useState([]);\n    const [updatedQ, setUpdatedQ] = useState([]);\n    const [qTitle, setQTitle] = useState('');\n  \n    const addQuestionTitle = qTitle =>\n        setQTitle([\n            ...qTitle\n        ]);\n\n    const addQuestion = (id, question) =>\n\n      setQuestions([\n          ...questions,\n          { \n              id,\n              question\n          }\n      ])\n\n    const removeQuestion = (id, question) => {\n        \n        let removed = questions.filter((questionArr) => {\n                \n                if(questionArr.id !== id) return questionArr;\n\n            });\n            \n            setQuestions(removed);\n            \n    };\n\n    \n    const updateQuestions = (id, change) => {\n        \n        setUpdatedQ(id,change)\n        // if(change.length > 0){\n        //     questions.filter((questionArr) => {\n            \n        //         if(questionArr.id === id){\n        //             console.log(change)\n        //         }\n    \n        //     })\n        // }\n        //console.log(id, change)\n        \n        console.log('updated', updatedQ)\n        \n    }\n  \n    const resetQuestionList = () =>{\n        setQuestions([])\n    }\n  \n  return (\n      <QuestionContext.Provider value={{ questions, qTitle, addQuestionTitle, addQuestion, removeQuestion, updateQuestions }}>\n          { children }\n          <span>{questions.length} / 10 possible answers</span> <button onClick={resetQuestionList}>Reset</button>\n      </QuestionContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}