{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/newQuestion.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useQuestions } from './questions';\nexport default function NewQuestion() {\n  const [qCount, setQCount] = useState(0);\n  const [titleTypeLimit, setTitleTypeLimit] = useState(false);\n  const [qTypeLimit, setQTypeLimit] = useState(false);\n  const [question, setQuestion] = useState('');\n  const [qTitle, setQTitle] = useState('');\n  const {\n    addQuestion,\n    addQuestionTitle\n  } = useQuestions();\n\n  const submit = e => {\n    e.preventDefault();\n    addQuestion(qCount, question);\n    setQCount(qCount + 1);\n    setQuestion('');\n  };\n\n  const handleTitleChange = e => {\n    e.preventDefault();\n    setQTitle(e.target.value);\n    addQuestionTitle(e.target.value);\n\n    if (e.target.value.length >= 80) {\n      setTitleTypeLimit(true);\n    }\n  };\n\n  const handleQChange = e => {\n    e.preventDefault();\n    setQuestion(e.target.value);\n\n    if (e.target.value.length >= 80) {\n      setQTypeLimit(true);\n    }\n  };\n\n  useEffect(() => {\n    document.getElementById('resetBtn').addEventListener('click', function () {\n      setTitleTypeLimit(false);\n      setQTypeLimit(false);\n      setQTitle([]);\n      setQuestion([]);\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: qTitle,\n    onChange: handleTitleChange,\n    maxLength: \"80\",\n    disabled: titleTypeLimit,\n    placeholder: \"What is the value of \\u03C0?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: question,\n    placeholder: \"Type an answer\",\n    maxLength: \"80\",\n    disabled: qTypeLimit,\n    onChange: handleQChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/newQuestion.js"],"names":["React","useEffect","useState","useQuestions","NewQuestion","qCount","setQCount","titleTypeLimit","setTitleTypeLimit","qTypeLimit","setQTypeLimit","question","setQuestion","qTitle","setQTitle","addQuestion","addQuestionTitle","submit","e","preventDefault","handleTitleChange","target","value","length","handleQChange","document","getElementById","addEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuestions } from './questions';\n\nexport default function NewQuestion() {\n  \n  const [qCount, setQCount] = useState(0);\n  const [titleTypeLimit, setTitleTypeLimit] = useState(false);\n  const [qTypeLimit, setQTypeLimit] = useState(false);\n  const [question, setQuestion] = useState('');\n  const [qTitle, setQTitle] = useState('');\n  const { addQuestion, addQuestionTitle } = useQuestions();\n\n  \n  const submit = e => {\n    e.preventDefault();\n    addQuestion(qCount,question);\n    setQCount(qCount+1);\n    setQuestion('');\n  }\n\n  const handleTitleChange = e => {\n    e.preventDefault(); \n    setQTitle(e.target.value);\n    addQuestionTitle(e.target.value);\n    if(e.target.value.length >= 80){\n\n      setTitleTypeLimit(true);\n\n    }\n  }\n\n  const handleQChange = e => {\n    e.preventDefault();\n    setQuestion(e.target.value);\n\n    if(e.target.value.length >= 80){\n\n      setQTypeLimit(true);\n\n    }\n  }\n\n  useEffect(() => {\n    document.getElementById('resetBtn').addEventListener('click', function(){\n      setTitleTypeLimit(false);\n      setQTypeLimit(false);\n      setQTitle([]);\n      setQuestion([]);\n    });\n  })\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" value={qTitle} onChange={handleTitleChange} maxLength=\"80\" disabled={titleTypeLimit} placeholder=\"What is the value of Ï€?\"/>\n        <br />\n        <input type=\"text\" value={question} placeholder=\"Type an answer\" maxLength=\"80\" disabled={qTypeLimit} onChange={handleQChange} required />\n        <button onClick={submit}>Add</button>\n      </div>\n    </>\n    \n  )\n}"]},"metadata":{},"sourceType":"module"}