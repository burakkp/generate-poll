{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js\";\nimport React from 'react';\nimport ReactHighcharts from 'react-highcharts';\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n  const {\n    votes\n  } = useQuestions();\n  const seperatedVotes = [];\n  const count = {};\n  votes.forEach(function (i) {\n    count[i] = (count[i] || 0) + 1;\n  });\n  console.log(count);\n  const config = {\n    chart: {\n      type: 'bar'\n    },\n    title: {\n      text: 'Vote Results'\n    },\n    xAxis: {\n      categories: Object.values(count)\n    },\n    yAxis: {\n      categories: Object.keys(count)\n    },\n    series: [Object.values(count), Object.keys(count)]\n  };\n  console.log(config);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ReactHighcharts, {\n    config: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Result;","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js"],"names":["React","ReactHighcharts","useQuestions","Result","votes","seperatedVotes","count","forEach","i","console","log","config","chart","type","title","text","xAxis","categories","Object","values","yAxis","keys","series"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,MAAT,GAAkB;AAEd,QAAM;AAAEC,IAAAA;AAAF,MAAYF,YAAY,EAA9B;AAEA,QAAMG,cAAc,GAAG,EAAvB;AAEA,QAAMC,KAAK,GAAG,EAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,UAASC,CAAT,EAAY;AAAEF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAW,CAACF,KAAK,CAACE,CAAD,CAAL,IAAU,CAAX,IAAgB,CAA3B;AAA8B,GAA1D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAMK,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KADI;AAIXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KAJI;AAOXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAEC,MAAM,CAACC,MAAP,CAAcb,KAAd;AADT,KAPI;AAUXc,IAAAA,KAAK,EAAE;AACHH,MAAAA,UAAU,EAAEC,MAAM,CAACG,IAAP,CAAYf,KAAZ;AADT,KAVI;AAaXgB,IAAAA,MAAM,EAAE,CAACJ,MAAM,CAACC,MAAP,CAAcb,KAAd,CAAD,EAAuBY,MAAM,CAACG,IAAP,CAAYf,KAAZ,CAAvB;AAbG,GAAf;AAgBAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAIA,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH;;AAGD,eAAeR,MAAf","sourcesContent":["import React from 'react';  \nimport ReactHighcharts from 'react-highcharts';\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n\n    const { votes } = useQuestions();\n\n    const seperatedVotes = [];\n\n    const count = {};\n    votes.forEach(function(i) { count[i] = (count[i]||0) + 1;});\n    \n    console.log(count)\n    const config = {\n        chart: {\n            type: 'bar'\n        },\n        title: {\n            text: 'Vote Results'\n        },\n        xAxis: {\n            categories: Object.values(count)\n        },\n        yAxis: {\n            categories: Object.keys(count)\n        },\n        series: [Object.values(count), Object.keys(count)]\n    };\n\n    console.log(config)\n\n    return <div className=\"result-wrapper\">\n        <ReactHighcharts config = {config}></ReactHighcharts>\n    </div>\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}