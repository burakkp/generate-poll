{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js\";\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n  const {\n    votes\n  } = useQuestions();\n  const count = {};\n  votes.forEach(function (i) {\n    count[i] = (count[i] || 0) + 1;\n  });\n  let xAxis = Object.values(count),\n      yAxis = Object.keys(count),\n      seperatedVotes = [xAxis, yAxis];\n  console.log(Object.keys(count), Object.values(count));\n  useEffect(() => {});\n  const config = {\n    chart: {\n      type: 'column',\n      width: 500,\n      height: 500\n    },\n    title: {\n      text: 'Vote Results'\n    },\n    xAxis: {\n      categories: xAxis\n    },\n    yAxis: {\n      categories: yAxis\n    },\n    legend: {\n      enabled: false\n    },\n    series: seperatedVotes\n  };\n  console.log('asd', seperatedVotes);\n  console.log(config);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: 'chart',\n    options: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Result;","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/resultComponent/result.js"],"names":["React","useEffect","Highcharts","HighchartsReact","useQuestions","Result","votes","count","forEach","i","xAxis","Object","values","yAxis","keys","seperatedVotes","console","log","config","chart","type","width","height","title","text","categories","legend","enabled","series"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,MAAT,GAAkB;AAEd,QAAM;AAAEC,IAAAA;AAAF,MAAYF,YAAY,EAA9B;AAIA,QAAMG,KAAK,GAAG,EAAd;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAASC,CAAT,EAAY;AAAEF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAW,CAACF,KAAK,CAACE,CAAD,CAAL,IAAU,CAAX,IAAgB,CAA3B;AAA8B,GAA1D;AAEA,MAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,CAAZ;AAAA,MACIM,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYP,KAAZ,CADZ;AAAA,MAEIQ,cAAc,GAAG,CAACL,KAAD,EAAQG,KAAR,CAFrB;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,IAAP,CAAYP,KAAZ,CAAZ,EAA+BI,MAAM,CAACC,MAAP,CAAcL,KAAd,CAA/B;AAEAN,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,QAAMiB,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,KAAK,EAAE,GAFJ;AAGHC,MAAAA,MAAM,EAAC;AAHJ,KADI;AAMXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KANI;AASXd,IAAAA,KAAK,EAAE;AACHe,MAAAA,UAAU,EAAEf;AADT,KATI;AAYXG,IAAAA,KAAK,EAAE;AACHY,MAAAA,UAAU,EAAEZ;AADT,KAZI;AAeXa,IAAAA,MAAM,EAAC;AACHC,MAAAA,OAAO,EAAC;AADL,KAfI;AAkBXC,IAAAA,MAAM,EAAEb;AAlBG,GAAf;AAqBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,cAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEhB,UAA7B;AAAyC,IAAA,eAAe,EAAE,OAA1D;AAAmE,IAAA,OAAO,EAAEgB,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH;;AAGD,eAAeb,MAAf","sourcesContent":["import React, {useEffect} from 'react';  \nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport './result.scss';\nimport { useQuestions } from '../questionsComponent/questions';\n\nfunction Result() {\n\n    const { votes } = useQuestions();\n\n    \n\n    const count = {};\n    votes.forEach(function(i) { count[i] = (count[i]||0) + 1;});\n    \n    let xAxis = Object.values(count),\n        yAxis = Object.keys(count),\n        seperatedVotes = [xAxis, yAxis]\n\n    console.log(Object.keys(count),Object.values(count))\n\n    useEffect(() => {\n\n    })\n    \n    const config = {\n        chart: {\n            type: 'column',\n            width: 500,\n            height:500\n        },\n        title: {\n            text: 'Vote Results'\n        },\n        xAxis: {\n            categories: xAxis\n        },\n        yAxis: {\n            categories: yAxis\n        },\n        legend:{\n            enabled:false\n        },\n        series: seperatedVotes\n    };\n\n    console.log('asd', seperatedVotes)\n    console.log(config)\n\n    return <div className=\"result-wrapper\">\n        <HighchartsReact highcharts={Highcharts} constructorType={'chart'} options={config} />\n    </div>\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}