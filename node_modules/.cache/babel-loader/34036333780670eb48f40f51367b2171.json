{"ast":null,"code":"var _jsxFileName = \"/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js\";\nimport React, { createContext, useState, useContext } from 'react';\nimport './questions.scss';\nconst QuestionContext = createContext();\nconst QuestionTitleContext = createContext();\nexport const useQuestions = () => useContext(QuestionContext);\nexport const useQuestionTitle = () => useContext(QuestionTitleContext);\nexport default function QuestionProvider({\n  children\n}) {\n  const [questions, setQuestions] = useState([]);\n  const [qTitle, setQuestionTitle] = useState([]);\n\n  const addQuestionTitle = qTitle => setQuestionTitle([...qTitle, {\n    qTitle\n  }]);\n\n  const addQuestion = question => setQuestions([...questions, {\n    id: 1,\n    question,\n    complete: false\n  }]);\n\n  const setStatusQuestion = (id, status) => {\n    setQuestions(questions.map(t => t.id === id ? { ...t,\n      complete: status\n    } : t));\n  };\n\n  const setStatusQuestionTitle = () => {\n    setQuestionTitle(qTitle);\n  };\n\n  return /*#__PURE__*/React.createElement(QuestionContext.Provider, {\n    value: {\n      questions,\n      addQuestion,\n      setStatusQuestion,\n      qTitle,\n      addQuestionTitle,\n      setStatusQuestionTitle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, questions.length, \" / 10\"));\n}","map":{"version":3,"sources":["/home/burakkp/Documents/Projects/assessments/capgemini/fe-assignment/src/components/questionsComponent/questions.js"],"names":["React","createContext","useState","useContext","QuestionContext","QuestionTitleContext","useQuestions","useQuestionTitle","QuestionProvider","children","questions","setQuestions","qTitle","setQuestionTitle","addQuestionTitle","addQuestion","question","id","complete","setStatusQuestion","status","map","t","setStatusQuestionTitle","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,OAAO,kBAAP;AAEA,MAAMC,eAAe,GAAGH,aAAa,EAArC;AACA,MAAMI,oBAAoB,GAAGJ,aAAa,EAA1C;AAEA,OAAO,MAAMK,YAAY,GAAG,MAAMH,UAAU,CAACC,eAAD,CAArC;AACP,OAAO,MAAMG,gBAAgB,GAAG,MAAMJ,UAAU,CAACE,oBAAD,CAAzC;AAEP,eAAe,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAErD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,MAAD,EAASC,gBAAT,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMY,gBAAgB,GAAGF,MAAM,IACzBC,gBAAgB,CAAC,CACb,GAAGD,MADU,EAEb;AACIA,IAAAA;AADJ,GAFa,CAAD,CADtB;;AAQA,QAAMG,WAAW,GAAGC,QAAQ,IACxBL,YAAY,CAAC,CACT,GAAGD,SADM,EAET;AACIO,IAAAA,EAAE,EAAE,CADR;AAEID,IAAAA,QAFJ;AAGIE,IAAAA,QAAQ,EAAE;AAHd,GAFS,CAAD,CADhB;;AAWA,QAAMC,iBAAiB,GAAG,CAACF,EAAD,EAAKG,MAAL,KAAgB;AACtCT,IAAAA,YAAY,CAACD,SAAS,CAACW,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAAT,GAAc,EAAC,GAAGK,CAAJ;AAAOJ,MAAAA,QAAQ,EAAEE;AAAjB,KAAd,GAAyCE,CAA5D,CAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,sBAAsB,GAAG,MAAM;AACjCV,IAAAA,gBAAgB,CAACD,MAAD,CAAhB;AACH,GAFD;;AAIA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAF;AAAaK,MAAAA,WAAb;AAA0BI,MAAAA,iBAA1B;AAA6CP,MAAAA,MAA7C;AAAqDE,MAAAA,gBAArD;AAAuES,MAAAA;AAAvE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,QADN,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAS,CAACc,MAAjB,UAFJ,CADJ;AAMD","sourcesContent":["import React, {createContext, useState, useContext} from 'react'\nimport './questions.scss';\n\nconst QuestionContext = createContext();\nconst QuestionTitleContext = createContext();\n\nexport const useQuestions = () => useContext(QuestionContext);\nexport const useQuestionTitle = () => useContext(QuestionTitleContext);\n\nexport default function QuestionProvider({ children }) {\n\n  const [questions, setQuestions] = useState([]);\n  const [qTitle, setQuestionTitle] = useState([]);\n  \n  const addQuestionTitle = qTitle => \n        setQuestionTitle([\n            ...qTitle,\n            {\n                qTitle\n            }\n        ]);\n\n  const addQuestion = question =>\n      setQuestions([\n          ...questions,\n          {\n              id: 1,\n              question,\n              complete: false\n          }\n      ])\n\n  \n  const setStatusQuestion = (id, status) => {\n      setQuestions(questions.map(t => t.id === id ? {...t, complete: status} : t))\n  }\n\n  const setStatusQuestionTitle = () => {\n      setQuestionTitle(qTitle)\n  }\n  \n  return (\n      <QuestionContext.Provider value={{ questions, addQuestion, setStatusQuestion, qTitle, addQuestionTitle, setStatusQuestionTitle }}>\n          { children }\n          <span>{questions.length} / 10</span>\n      </QuestionContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}